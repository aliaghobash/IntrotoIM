Bubble b; 
Bubble b1; 
void setup() {
  size(640, 360);
  b = new Bubble(64, 600, 50);// b is a new instance a bubble object
  b1 = new Bubble(64, 100, 20);
  
};  
void draw() {
  background(255);
  //backdrop();
  b.top();
  b.display();
  b.ascend();//dot syntax, calling a function on that object.
  b.duplicate(); 
  b.sides();
  b1.top();
  b1.display();
  b1.ascend();
  b1.sides();
  
  //need to make an array for each new bubble 
  //  int index = 0;
  //for (int i = 0; i < row; i++) {
  //  for (int j = 0; j < cols; j++) {
  //    cells[index] = new Cell(i, j, s);
  //    index += 1;
   //for (int i = 0; i < cells.length; i++) {
   // cells[i].show();
    }
};
//___________________________
//code borrowed from Dan Shifman OOP coding series. 
class Bubble {
  float x;
  float y;
  float diameter;

  Bubble(float tempD, int ex, int why) { //ex is x coordinate, why is y coordinate
    x=width/2 + ex;
    why =height/2 + why;
    diameter=tempD;
  };

  void display() {
    stroke(0);
    fill(190); // random color to each group species 
    ellipse(x, y, diameter, diameter);
  };

  void top() {
    if (y<diameter/2) {
      y=diameter/2;
    };
  };
  void ascend() {
    y--;
    x=x+random(-2, 2);
  };

  void duplicate() {
    
  };
  void sides() {
    if (x>width) {
      x= width;
    };
  };
  void stopCollision() {
  }

  void dissapear() {
    // if bubble is at the top, and it is full, remove by pressing d
  };

  void colorSpecies() {
    
  }

};
